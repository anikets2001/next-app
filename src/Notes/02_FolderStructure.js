/*---

Root Files:

1. .gitignore - to ignore files to go to the github 

2. eslint.config.mjs - ESLint configuration for linting JavaScript/TypeScript code.

3. jsconfig.json - Helps VS Code with auto-imports and path aliases.

4. next.config.mjs - Custom configuration for Next.js (can enable features, redirects, rewrites, etc.)

5. package-lock.json - store exact version of dependencies and update them 

6. package.json - list all the installed dependencies

7. README.md - documentation file

Folders: 

1. .next - contains build ad cache files when you run next build or next dev (auto generated by next js)
SubFolders: 

    1.cache, server, static - Internals used for fast reload, rendering, and static files.
    2.app-build-manifest.json, build-manifest.json - Track build dependencies for server/client.
    3. trace - can be used for performance optimization

2. node_modules - Automatically generated folder containing all the installed npm packages.

3. public - Used for static assets (like images, SVGs, etc.) that donâ€™t go through Webpack.
You access them via /file.svg, /next.svg, etc.
Files here are publicly accessible.

4. src:
subFolders: app - app router directory
The new way to define routes and layouts using React Server Components.

1. layout.js - This is the root layout for your app. Wraps all pages (like a template).

2. page.js - This is your homepage (/ route).

3. page.module.css - CSS module file used to style components in page.js (scoped styling).

4. globals.css - Global CSS file. Typically imported in layout.js. Affects the whole app (e.g., resets, fonts, base styles).

5. favicon.ico - The favicon for the site

---*/